#include "stm32f4xx.h"

GPIO_InitTypeDef GPIO_InitLED;
USART_InitTypeDef USART_InitTransmit;                 //change1

void msDelay(__IO  uint32_t count);

int main(void)
{
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3,ENABLE);

	GPIO_InitLED.GPIO_Mode=GPIO_Mode_OUT;
	GPIO_InitLED.GPIO_OType=GPIO_OType_PP;
	GPIO_InitLED.GPIO_Pin=GPIO_Pin_12;
	GPIO_InitLED.GPIO_PuPd=GPIO_PuPd_NOPULL;
	GPIO_InitLED.GPIO_Speed=GPIO_Speed_50MHz;
	GPIO_Init(GPIOD,&GPIO_InitLED);


	GPIO_PinAFConfig(GPIOD,GPIO_PinSource8,GPIO_AF_USART3);

	GPIO_InitLED.GPIO_Mode=GPIO_Mode_AF;
	GPIO_InitLED.GPIO_OType=GPIO_OType_PP;
	GPIO_InitLED.GPIO_Pin=GPIO_Pin_8;
	GPIO_InitLED.GPIO_PuPd=GPIO_PuPd_NOPULL;
	GPIO_InitLED.GPIO_Speed=GPIO_Speed_50MHz;
	GPIO_Init(GPIOD,&GPIO_InitLED);

	USART_InitTransmit.USART_BaudRate=9600;
	USART_InitTransmit.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
	USART_InitTransmit.USART_Mode = USART_Mode_Tx;
	USART_InitTransmit.USART_Parity=USART_Parity_No;
	USART_InitTransmit.USART_WordLength=USART_WordLength_8b;
	USART_InitTransmit.USART_StopBits=USART_StopBits_1;
	USART_Init(USART3,&USART_InitTransmit);
	USART_Cmd(USART3,ENABLE);

	while(1)
	{
		GPIO_WriteBit(GPIOD,GPIO_Pin_12,Bit_SET);
		USART_SendData(USART3,'a');
		while(USART_GetFlagStatus(USART3,USART_FLAG_TXE)!=SET){};
		msDelay(16800000);
		GPIO_WriteBit(GPIOD,GPIO_Pin_12,Bit_RESET);
		USART_SendData(USART3,'b');
		while(USART_GetFlagStatus(USART3,USART_FLAG_TXE)!=SET){};
		msDelay(16800000);
	}
}

void msDelay(__IO uint32_t count)
{
	while(count--);
}
